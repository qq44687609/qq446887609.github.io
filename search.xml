<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[dede二次开发pc端手机端共用后台]]></title>
      <url>%2F2017%2F06%2F09%2Fdede%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91pc%E7%AB%AF%E6%89%8B%E6%9C%BA%E7%AB%AF%E5%85%B1%E7%94%A8%E5%90%8E%E5%8F%B0%2F</url>
      <content type="text"><![CDATA[最近做织梦企业站和pc端和手机端共用后台 手机端栏目交叉获取pc端文章数据时 点击进入的还是pc端文章内容模板 无法实现 双模板 这就用到了二次开发了。然后发现dede竟然也有mvc架构.目录结构说明：|_app |control 控制器(C) |model 模型(M) |templates 视图模板(V) |libraries 类库 |data 配置 |data\helper 小助手 |static 样式，js，图片文件夹 |index.php 统一入口文件 统一入口解析地址http://你的网址/app/index.php?ct=index&amp;ac=savect=index:控制器入口,对应到目录control中的index.php如果RunApp()指定了第三个参数，例如问答中RunApp($ct, $ac , ‘admin’)，说明ct=index:控制器入口,对应到目录control/admin中的index.phpac=save:操作,对应文件index.php中的class index中function ac_save()控制器中将相关功能操作都存放至一个文件中,例如留言板,可以使用:?ct=guestbook&amp;ac={do}统一完成,这样也便于静态化部署. 栏目交叉获取到pc端的文章以列表形式展现在手机端列表模板，我们只需把列表[field:arcurl/] 指向改为如mvc/index.php?ct=arclist&amp;ac=view&amp;id=98[field:id/]在arclist控制器调取文章内容分配到新模板即 ###部分代码 foreach ($arc_news as $val) { $GLOBALS[$val] = $$val; } //载入模板 $this-&gt;SetTemplate(&apos;detail_m.htm&apos;); $this-&gt;Display(); 完整dome下载地址 http://pan.baidu.com/s/1dEK9ykp 密码:o0k2]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[微博授权登陆]]></title>
      <url>%2F2017%2F05%2F18%2F%E5%BE%AE%E5%8D%9A%E6%8E%88%E6%9D%83%E7%99%BB%E9%99%86%2F</url>
      <content type="text"><![CDATA[需要实现第三方微博登陆:首先当然是申请微博开放平台啦 http://open.weibo.com/ 申请流程不再赘述 下载新浪提供的第三方类库到TP vendor目录下1.Common/下function.php添加函数引入第三方类库//微博登陆 function saet($appkey,$appscr,$url){ Vendor(&apos;wb.log.Saet&apos;); return new SaeTOAuthV2($appkey,$appscr); } 2. config中配置appkey appscr,redirect_url(回调地址)&apos;appkey&apos;=&gt;&apos;xxxxxxx&apos;, &apos;redirect_url&apos;=&gt;&apos;xxxxxxxx&apos;, &apos;appscr&apos;=&gt;&apos;xxxxxxxxxx&apos;, 3. 设置设置登陆&lt;a href=&quot;weblogin&quot;&gt;&lt;/a&gt; //微博登陆 public function wblogin(){ $appkey = C(&apos;appkey&apos;); $appscr =C(&apos;appscr&apos;); $url =C(&apos;redirect_url&apos;); //实例化微博登陆类 $sate = saet($appkey,$appscr); //获取登陆地址 $auto = $sate-&gt;getAuthorizeURL($url); header(&apos;Location:&apos;.$auto); } 4. 获取token //获取token public function gettoken(){ if(!$_SESSION[&apos;expire_time&apos;]&lt;time()){ return $_SESSION[&apos;token&apos;]; }else{ $appkey = C(&apos;appkey&apos;); $appscr =C(&apos;appscr&apos;); $url =C(&apos;redirect_url&apos;); $code = I(&apos;get.code&apos;); $saet = saet($appkey,$appscr); $keys[&apos;code&apos;] = $code; $keys[&apos;redirect_uri&apos;] = $url; $token = $saet-&gt;getAccessToken($keys); $_SESSION[&apos;token&apos;] = $token; $_SESSION[&apos;expire_time&apos;] = time()+157679999; return $token; } } 5. 登陆根据token中信息获取用户信息(业务需要)//微博登陆回调 public function callback(){ if(IS_GET){ $token = $this-&gt;gettoken(); //uid获取用户 $uid = $token[&apos;uid&apos;]; $user = D(&apos;user&apos;); $res = $user-&gt;where(&quot;uid = $uid&quot;)-&gt;find(); if(isset($res)){ //没有的话新增用户 $data[&apos;uid&apos;]= $uid; $data[&apos;createtime&apos;] = time(); if( $id = $user-&gt;add($data)){ $_SESSION[&apos;username&apos;][&apos;username&apos;] = $uid; $_SESSION[&apos;username&apos;][&apos;id&apos;] = $id; $this-&gt;redirect(&apos;index/index&apos;); }else{ $this-&gt;error(&apos;错误&apos;); } }else{ //有的话直接登陆 $_SESSION[&apos;username&apos;][&apos;username&apos;] = $uid; $_SESSION[&apos;username&apos;][&apos;id&apos;] = $res[&apos;userid&apos;]; $this-&gt;redirect(&apos;index/index&apos;); } } }]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[每日签单实现]]></title>
      <url>%2F2017%2F04%2F06%2F%E6%AF%8F%E6%97%A5%E7%AD%BE%E5%8D%95%E5%AE%9E%E7%8E%B0%2F</url>
      <content type="text"><![CDATA[简单每日签到实现 签到如YII官方的一样 直接php代码 当然还需要结合ajax和jq(不贴了) if(IS_AJAX){ $userid = $_SESSION[&apos;username&apos;][&apos;id&apos;]; $sign_model = D(&apos;sign&apos;); $detail_model = D(&apos;user_detail&apos;); $where = array(&apos;userid&apos;=&gt;$userid); $time = date(&apos;Y-m-d&apos;,time()); $now_time = strtotime($time); $time_where = array(&apos;signtime&apos;=&gt;$now_time); //判断是否为第一次签到 $res = $sign_model-&gt;where($where)-&gt;find(); //用户积分情况 $details = $detail_model-&gt;where($where)-&gt;find(); if(empty($res)){ //第一次签到新增签到表 $data[&apos;cta&apos;] = 1; $data[&apos;num&apos;] = 1; $data[&apos;signtime&apos;] = $now_time; $data[&apos;userid&apos;] = $userid; $sign_model-&gt;add($data); $details[&apos;integral&apos;] += 5; $detail_model-&gt;save($details); //返回连续签到天数 $arr = array( &apos;status&apos;=&gt;&apos;ok&apos;, &apos;cta&apos;=&gt;1 ); }else{ //已经签到 if($res[&apos;signtime&apos;]==$now_time){ exit(json_encode(array(&apos;status&apos;=&gt;&apos;happened&apos;))); die; } //断签 if(($now_time-$res[&apos;signtime&apos;])&gt;24*3600){ $res[&apos;cta&apos;] = 1; }else{ //连续签到 $res[&apos;cta&apos;] += 1; } $res[&apos;signtime&apos;] = $now_time; $res[&apos;num&apos;] += 1; $sign_model-&gt;save($res); //用户连续签到7天 if($res[&apos;cta&apos;]%7==0){ $details[&apos;integral&apos;] += 20; }else{ $details[&apos;integral&apos;] += 5; } //返回连续签到天数 $arr = array( &apos;status&apos;=&gt;&apos;ok&apos;, &apos;cta&apos;=&gt;$res[&apos;cta&apos;], ); } $detail_model-&gt;save($details); //更新今日有多少人签到 $query = $sign_model-&gt;field(&apos;sign_id&apos;)-&gt;where($time_where)-&gt;select(); $count = count($query); //签到总人数 $arr = array_merge($arr,array(&apos;count&apos;=&gt;$count)); exit(json_encode($arr)); }]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[js原生常见特效]]></title>
      <url>%2F2017%2F03%2F10%2Fjs%E5%8E%9F%E7%94%9F%E5%B8%B8%E8%A7%81%E7%89%B9%E6%95%88%2F</url>
      <content type="text"><![CDATA[今天练习了几个常见js特效，基本掌握了原理. js轮播图(滑动效果切换) 换肤功能 图片延迟加载 渐隐 图片轮播 当然还有不少问题，如切换时太快容易失帧，暂时没解决,主要就是通过定时器实现更改已经绝对定位的canvas的left属性实现轮播,这个例子实用价值不高。 var t; var init = 0; var imgs = document.getElementsByTagName(&apos;img&apos;); var lis = document.getElementsByTagName(&apos;li&apos;); var canvas = document.getElementById(&apos;canvas&apos;); start(); //定义当前图片索引位置 function start(){ t = setInterval(function(){ init++; //到第6时返回第一张 if(init % 6 == 0){ init=0; } change(init); },5000); } //切换图片位置 function change(init){ //切换第二张图片 //canvas.style.left = init * -730+&apos;px&apos;; //计算终点位置 var x2 = ((init%6) * -730); //计算开始位置 var x1 = (init-1)* -730; //清除其他li图标样式 for (var i = 0 ; i &lt; 6; i++) { lis[i].className = &quot;&quot;; } lis[init].className = &quot;on&quot;; slide(canvas,x1,x2,1,2); } //鼠标事件 for(var k = 0 ; k &lt; 6; k++){ imgs[k].onmouseover = function(){ clearInterval(t); } imgs[k].onmouseout = function(){ start(); } } //鼠标移动小图标切换 for(var j = 0 ; j &lt; 6; j++){ lis[j].index = j; lis[j].onmouseover = function(){ clearInterval(t); this.style.cursor=&quot;pointer&quot;; init = this.index; change(this.index); } } //封装一个方法 实现滑动效果 //obj，要移动的对象 //x1,对象的起始位置 //x2,对象的终点位置 //s,移动的时间间隔 //step,每次移动的步长 function slide(obj,x1,x2,s,step){ var t1; if(x1&gt;x2){ t1 = setInterval(function(){ x1 = x1-step; obj.style.left = x1+&apos;px&apos;; //滑动矫正 if(x1&lt;=x2){ clearInterval(t1); obj.style.left = x2+&apos;px&apos;; } },s); } } html代码 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style&gt; *{margin: 0; padding: 0;} #box {width: 730px; height: 454px; margin: 50px auto 0; position: relative; overflow: hidden;} #canvas {cursor:pointer;width: 4380px; height: 454px; position: absolute; left: 0; top: 0;} #canvas a {float: left; width: 730px; height: 454px;} ul {position: absolute; bottom: 10px; width: 100%; text-align: center;} ul li {display: inline-block; list-style: none; width:20px; height: 20px; margin:0 10px 0 10px border-radius: 10px; background: #999; color: #fff; font-weight: bold;font-size: 14px; text-align: center;line-height: 20px;} li.on {background: #c30;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;box&quot;&gt; &lt;div id=&quot;canvas&quot;&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/jd1.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/jd2.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/jd3.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/jd4.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/jd5.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/jd6.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;/div&gt; &lt;ul&gt; &lt;li class=&quot;on&quot;&gt;1&lt;/li&gt; &lt;li&gt;2&lt;/li&gt; &lt;li&gt;3&lt;/li&gt; &lt;li&gt;4&lt;/li&gt; &lt;li&gt;5&lt;/li&gt; &lt;li&gt;6&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/body&gt; 图片换肤 换肤功能核心即js中对cookie的使用，可喜的是w3c中给我们封装好了保存和获取cookie函数。 //官方封装好的保存cookie function setCookie(c_name,value,expiredays) { var exdate=new Date() exdate.setDate(exdate.getDate()+expiredays) document.cookie=c_name+ &quot;=&quot; +escape(value)+ ((expiredays==null) ? &quot;&quot; : &quot;;expires=&quot;+exdate.toGMTString()) } //官方封装好的读取cookie function getCookie(c_name) { if (document.cookie.length&gt;0) { c_start=document.cookie.indexOf(c_name + &quot;=&quot;) if (c_start!=-1) { c_start=c_start + c_name.length+1 c_end=document.cookie.indexOf(&quot;;&quot;,c_start) if (c_end==-1) c_end=document.cookie.length return unescape(document.cookie.substring(c_start,c_end)) } } return &quot;&quot; } 完整代码 //再次登录时获取保存的皮肤 window.onload = function(){ skin = getCookie(&apos;skin&apos;); document.body.style.background = skin; } //更新皮肤 var imgs = document.getElementsByTagName(&apos;img&apos;); for(var i=0;i&lt;imgs.length;i++){ imgs[i].index = i; imgs[i].onclick = function(){ var bg = this.getAttribute(&apos;xsrc&apos;); document.body.style.background = bg; setCookie(&apos;skin&apos;,bg,2); } } //官方封装好的保存cookie function setCookie(c_name,value,expiredays) { var exdate=new Date() exdate.setDate(exdate.getDate()+expiredays) document.cookie=c_name+ &quot;=&quot; +escape(value)+ ((expiredays==null) ? &quot;&quot; : &quot;;expires=&quot;+exdate.toGMTString()) } //官方封装好的读取cookie function getCookie(c_name) { if (document.cookie.length&gt;0) { c_start=document.cookie.indexOf(c_name + &quot;=&quot;) if (c_start!=-1) { c_start=c_start + c_name.length+1 c_end=document.cookie.indexOf(&quot;;&quot;,c_start) if (c_end==-1) c_end=document.cookie.length return unescape(document.cookie.substring(c_start,c_end)) } } return &quot;&quot; } html代码 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;请选择你喜欢的皮肤&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;a href=&quot;javascript:void()&quot;&gt;&lt;img src=&quot;images/bg1_lit.jpg&quot; xsrc=&apos;url(images/bg1.jpg)&apos; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/bg2_lit.jpg&quot; xsrc=&apos;url(images/bg2.jpg)&apos; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/bg3_lit.jpg&quot; xsrc=&apos;url(images/bg3.jpg)&apos; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href=&quot;&quot;&gt;&lt;img src=&quot;images/bg4_lit.jpg&quot; xsrc=&apos;url(images/bg4.jpg)&apos; alt=&quot;&quot;&gt;&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/body&gt; &lt;/html&gt; 图片延迟加载 图片延迟加载是在电影网站中常见功能，主要目的是为了节省带宽，原理是用户可视窗口距离（ClientHeight）+滚动条距离（scrollTop）如果&gt;=图片位置距离顶部距离(obj.offsetTop) 才加载图片，原图片路径存在非标准属性中. var imgs = document.getElementsByTagName(&apos;img&apos;); document.onscroll = function(){ //可视部分高度 var windo = document.documentElement.clientHeight; //console.log(windo); //滚动条距离 var ch = document.body.scrollTop; for(var i=0;i&lt;imgs.length;i++){ if(windo+ch&gt;=imgs[i].offsetTop+110){ //获取非标准属性更改src imgs[i].src = imgs[i].getAttribute(&apos;xsrc&apos;); } } } 渐隐 js实现更改opacity值即可 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style&gt; #box { width: 100px; height: 100px; position: absolute; top : 100px; left: 600px; background: red; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;box&quot;&gt; &lt;/div&gt; &lt;input type=&quot;button&quot; value=&quot;显示&quot;&gt; &lt;input type=&quot;button&quot; value=&quot;隐藏&quot;&gt; &lt;script&gt; var inputs = document.getElementsByTagName(&apos;input&apos;); var divs = document.getElementById(&apos;box&apos;); inputs[0].onclick = function(){ io = 1; opacity(divs,100,5,io); } inputs[1].onclick = function(){ io = 0; opacity(divs,100,5,io); } //io表示显示和隐藏 in out 为true是显示， false是隐藏 //step的值是0~100之间 function opacity(obj,s,step,io){ //显示 var top; if(io==1){ top=0; t = setInterval(function(){ top+=step; obj.style.opacity = parseFloat(top/100); },s); if(top&gt;=100){ clearInterval(t); obj.style.opacity = 1; } } //隐藏 if(io==0){ top = 100; t1 = setInterval(function(){ top-=step; obj.style.opacity = parseFloat(top/100); },s); if(top&lt;=0){ clearInterval(t1); obj.style.opacity = 0; } } } &lt;/script&gt;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[js+ajax滑动星星评分]]></title>
      <url>%2F2017%2F03%2F09%2Fjs-ajax%E6%BB%91%E5%8A%A8%E6%98%9F%E6%98%9F%E8%AF%84%E5%88%86%2F</url>
      <content type="text"><![CDATA[原谅我使用的dede，php文件需要写在plus文件夹下。值得一提的是星星是分为4种 黄色 左右 2个 灰色 左右 2个。 星星滑动效果 //js星星滑动 $(function(){ $(&apos;#cccc img&apos;).mouseover(function(){ //左边全部变为黄色 $(this).prevAll(&apos;img&apos;).each(function(k,v){ var src=$(this).attr(&apos;src&apos;); src =src.replace(&apos;rank_3.gif&apos;,&apos;rank_1.gif&apos;); src =src.replace(&apos;rank_4.gif&apos;,&apos;rank_2.gif&apos;); $(this).attr(&apos;src&apos;,src); } ) //当前变色 var src=$(this).attr(&apos;src&apos;); src =src.replace(&apos;rank_3.gif&apos;,&apos;rank_1.gif&apos;); src =src.replace(&apos;rank_4.gif&apos;,&apos;rank_2.gif&apos;); $(this).attr(&apos;src&apos;,src); //右边全部变为灰色 $(this).nextAll(&apos;img&apos;).each(function(k,v){ var src=$(this).attr(&apos;src&apos;); src =src.replace(&apos;rank_1.gif&apos;,&apos;rank_3.gif&apos;); src =src.replace(&apos;rank_2.gif&apos;,&apos;rank_4.gif&apos;); $(this).attr(&apos;src&apos;,src); } ) } ) 点击评分//点击ajax添加评分 $(&apos;#cccc img&apos;).click(function(){ var i=$(this).index(); var score = (i+1)/2; var url = &quot;{dede:global.cfg_phpurl/}/get_score.php&quot;; var id = &quot;{dede:field.id/}&quot;; var data = { &apos;aid&apos;:id, &apos;score&apos;:score, &apos;url&apos;:&apos;{dede:field name=&quot;arcurl&quot;/}&apos; }; var success = function(res){ if(res.status==&quot;ok&quot;){ $(&apos;#score&apos;).html(res.score); $(&apos;#pfrenshu&apos;).html(res.pfrenshu); } if(res.status==&quot;error&quot;){ alert(&apos;一天只能评价一次&apos;); } } $.get(url,data,success,&apos;json&apos;); }) }) php dede 处理评分require_once(dirname(__FILE__).&quot;/../include/common.inc.php&quot;); $aid = $_GET[&apos;aid&apos;]; $score = $_GET[&apos;score&apos;]; //判断是否已经评过分 if($aid==$_COOKIE[&apos;aid&apos;]){ echo json_encode(array( &apos;status&apos;=&gt;&apos;error&apos;, ) ); die(); } $url = $_GET[&apos;url&apos;]; //根据url判断当前是那张表的数据 $url = explode(&apos;/&apos;,$url); if(in_array(&apos;dongman&apos;,$url)){ //查询评分 $pf_array = $dsql-&gt;GetOne(&quot;SELECT pfrenshu,pingfen FROM `#@__addon18` WHERE aid=&apos;$aid&apos; &quot;); //计算评分 $new_score = round(($pf_array[&apos;pingfen&apos;]*$pf_array[&apos;pfrenshu&apos;]+$score)/($pf_array[&apos;pfrenshu&apos;]+1),2); //更新评分,人数 $dsql-&gt;ExecuteNoneQuery(&quot;UPDATE `#@__addon18` SET pfrenshu = pfrenshu+1,pingfen = &apos;$new_score&apos; WHERE aid=&apos;$aid&apos; &quot;); echo json_encode(array( &apos;score&apos;=&gt;$new_score, &apos;status&apos;=&gt;&apos;ok&apos;, &apos;pfrenshu&apos;=&gt;$pf_array[&apos;pfrenshu&apos;]+1, )); } //添加cookie防止刷分 //设置cookie过期时间 $day =explode(&apos;-&apos;,date(&apos;Y-m-d&apos;,time())); $time = mktime(&apos;23&apos;,&apos;59&apos;,&apos;59&apos;,$day[1],$day[2],$day[0]); setcookie(&apos;aid&apos;,$aid,$time,&apos;/&apos;); 因为dede文件都是静态文件，前台页面评分数据需使用ajax更新评分$(function(){ $.ajax({ url:&apos;{dede:global.cfg_phpurl/}/get_pingfen.php&apos;, dataType:&apos;json&apos;, type:&apos;get&apos;, data:{aid:&apos;{dede:field.id/}&apos;,url:&apos;{dede:field name=&quot;arcurl&quot;/}&apos;}, success:function(res){ if(res.pingfen){ $(&apos;#score&apos;).html(res.pingfen); //计算星星 var sc_num =Math.ceil($(&apos;#score&apos;).html()*2); $(&apos;#cccc img&apos;).each(function(k,v) { if(k &lt; sc_num){ var src=$(this).attr(&apos;src&apos;); src =src.replace(&apos;rank_3.gif&apos;,&apos;rank_1.gif&apos;); src =src.replace(&apos;rank_4.gif&apos;,&apos;rank_2.gif&apos;); $(this).attr(&apos;src&apos;,src); } }) } } }) })]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[session入库]]></title>
      <url>%2F2017%2F03%2F09%2Fsession%E5%85%A5%E5%BA%93%2F</url>
      <content type="text"><![CDATA[重写session的存储机制 便于管理大量的session数据 便于web服务器集群共享session数据。 实现：定义（实现）自定义的相关的存储处理函数将其设置为session机制需要的存储函数(告知给session机制，使用我们的函数完成存储处理) Session机制，共需要6个存储处理函数:Session_set_save_handler(开始处理器，结束处理器，读处理器，写处理器，删除处理，垃圾回收处理器); 建表 建立session表表中的记录，对应session文件。create table session ( session_id varchar(40) not null default ‘’, session_content text, primary key(session_id))charset=utf8 engine=myisam;。 垃圾回收操作(gc)在开启session机制过程中，有概率的执行垃圾回收操作。默认的概率为1/1000可以配置php.ini也可设置概率： ini_set(&apos;session.gc_probability&apos;, &apos;1&apos;); ini_set(&apos;session.gc_divisor&apos;,&apos;4&apos;); 上代码&lt;?php function session_begin(){ $link = mysql_connect(&apos;127.0.0.1&apos;,&apos;root&apos;,&apos;root&apos;); mysql_query(&apos;set names utf8&apos;); mysql_select_db(&apos;session&apos;); } function session_end(){ echo &apos;end&apos;.&quot;&lt;br/&gt;&quot;; } function session_read($sess_id){ $sql = &apos;select session_content from session where session_id = &quot;$sess_id&quot;&apos;; $result = mysql_query($sql); if($row = mysql_fetch_assoc($result)){ return $row; }else{ return &apos;&apos;; } } function session_wirte($sess_id,$sess_content){ $time = time(); $sql = &quot;replace into session(session_id,session_content,createtime)values(&apos;$sess_id&apos;,&apos;$sess_content&apos;,&apos;$time&apos;)&quot;; mysql_query($sql); } function session_delete($sess_id){ $sql = &quot;delete from session where session_id = &apos;$sess_id&apos;&quot;; mysql_query($sql); } function session_gc($max_lifetime){ $time =time(); $sql = &quot;delete from session where createtime &lt; &apos;$time&apos;-&apos;$max_lifetime&apos;&quot;; mysql_query($sql); } session_set_save_handler(&apos;session_begin&apos;, &apos;session_end&apos;, &apos;session_read&apos;, &apos;session_wirte&apos;, &apos;session_delete&apos;, &apos;session_gc&apos;); ?&gt;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[计时器]]></title>
      <url>%2F2017%2F02%2F10%2F%E8%AE%A1%E6%97%B6%E5%99%A8%2F</url>
      <content type="text"><![CDATA[js 倒计时生成 你站的地方风吹过来都是暖的 以前一直感觉JS难，今天学了1天。。。。。 才写好个倒计时生成 贴上来吧！！！ 效果先贴上图片 贴上自己写的简单计时器 &lt;div id=&quot;one&quot;&gt; &lt;div id=&quot;day&quot;&gt;&lt;span id=&quot;days&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;em&gt;days&lt;/em&gt; /&lt;/div&gt; &lt;div id=&quot;hour&quot;&gt;&lt;span id=&quot;hours&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;em&gt;hours&lt;/em&gt; /&lt;/div&gt; &lt;div id=&quot;min&quot;&gt;&lt;span id=&quot;mins&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;em&gt;min&lt;/em&gt; /&lt;/div&gt; &lt;div id=&quot;sec&quot;&gt;&lt;span id=&quot;secs&quot;&gt;&lt;/span&gt;&lt;br/&gt;&lt;em&gt;sec&lt;/em&gt; /&lt;/div&gt; &lt;/div&gt; &lt;script&gt; //判断添加01 类型时间 function checktime(i){ if(i&lt;10){ i=&quot;0&quot;+i; } return i; } //启动时间 setInterval(&quot;showtime()&quot;,1000); //倒计时函数 function showtime(){ var endtime=new Date(&quot;2018/01/01,15:01:01&quot;); var nowtime=new Date(); var counttime=parseInt(endtime.getTime() - nowtime.getTime())/1000; var days=parseInt(counttime/60/60/24); var hours=parseInt(counttime/60/60%24); var mins=parseInt(counttime/60%60); var sec=parseInt(counttime%60); //判断是否小于10小于10在前面加0 hours=checktime(hours); mins=checktime(mins); secs=checktime(sec); //输出日期 document.getElementById(&quot;days&quot;).innerHTML=days; document.getElementById(&quot;hours&quot;).innerHTML=hours; document.getElementById(&quot;mins&quot;).innerHTML=mins; document.getElementById(&quot;secs&quot;).innerHTML=secs; }]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[yii2.0 集合七牛SDK 上传图片到第三方]]></title>
      <url>%2F2017%2F01%2F17%2Fyii2-0-%E9%9B%86%E5%90%88%E4%B8%83%E7%89%9BSDK-%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%88%B0%E7%AC%AC%E4%B8%89%E6%96%B9%2F</url>
      <content type="text"><![CDATA[首先，请用composer下载七牛phpSDK (具体参考官方文档) composer require qiniu/php-sdk 注册七牛账号 获取 AK SK（密匙） ，创建资源对象 获取domain(访问域名) bucket(你创建的资源对象名称) models层定义AK SK domain bucket等常量 方便日后使用(因人而异) const AK = &apos;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&apos;; const SK = &apos;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&apos;; const DOMAIN = &apos;xxxxxxx.com&apos;; const BUCKET = &apos;xxxxxxxxxxx&apos;; controller中加载七牛类 use crazyfd\qiniu\Qiniu; 实例化七牛对象执行上传 //实例化七牛对象 $qiniu = new Qiniu(Product::AK,Product::SK,Product::DOMAIN,Product::BUCKET); //生成key（图片标志） $key = uniqid(); //执行上传 $qiniu-&gt;uploadFile($_FILES[&apos;Product&apos;][&apos;tmp_name&apos;][&apos;cover&apos;],$key); //获取存储地址 $cover = $qiniu-&gt;getLink($key); ------后面就是把路径存到数据库即可 多图片上传同理foreach即可 foreach($_FILES[&apos;Product&apos;][&apos;tmp_name&apos;][&apos;pics&apos;] as $k =&gt; $file){ if($_FILES[&apos;Product&apos;][&apos;error&apos;][&apos;pics&apos;][$k]&gt;0){ continue; } $key = uniqid(); $qiniu-&gt;uploadFile($file,$key); //(保存key为下标 方便后面删除) $pics[$key] = $qiniu-&gt;getLink($key); } 多图片集合返回json格式 值得一提的是七牛可以设置多图片样式,比如我就将图片设置成3种,product_small,product_big,product_mid; view视图输出 ---- 七牛存储的图片删除 $productid = yii::$app-&gt;request-&gt;get(&apos;productid&apos;); $product_del = Product::find()-&gt;where(&apos;productid=:pid&apos;,[&apos;:pid&apos;=&gt;$productid])-&gt;one(); //获取链接中文件名 $key = basename($product_del-&gt;cover); //七牛 $qiniu = new Qiniu(Product::AK,Product::SK,Product::DOMAIN,Product::BUCKET); $qiniu-&gt;delete($key); //删除多图片(因为保存时将文件名保存为下标值可直接删除) $pics = json_decode($product_del-&gt;pics,true); foreach ($pics as $key =&gt; $value) { $qiniu-&gt;delete($key); }]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[yii框架分页]]></title>
      <url>%2F2017%2F01%2F05%2Fyii%E6%A1%86%E6%9E%B6%E5%88%86%E9%A1%B5%2F</url>
      <content type="text"><![CDATA[#YII框架分页 学习笔记 yii框架的分页相对其他简单了许多 Controller中 1.加载分页组件 use yii/data/Pagination; 2.主体分页代码 $query=Admin::find(); $count=$query-&gt;count();//计算总数 $page=new pagination(&apos;totalCount&apos;=&gt;$count,&apos;pageSize&apos;=&gt;&apos;2&apos;); //总页数和每页显示页数 $list=$query-&gt;offset($page-&gt;offset)-&gt;limit($page-&gt;list)-&gt;all(); //查询 retrun $this-&gt;render(&apos;list&apos;,&apos;list&apos;=&gt;$list,&apos;pages&apos;=&gt;$page); //结果和分页样式输出 view识图显示 显示数据 foreach ($models as $model) { // display $model here } 显示分页样式 1.页头加载Linkpager类 use yii\widgets\LinkPager; 2.显示输出 echo LinkPage::widget(&apos;pagiation&apos;=&gt;$page);]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[yii框架发送邮件]]></title>
      <url>%2F2017%2F01%2F04%2Fyii%E6%A1%86%E6%9E%B6%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%2F</url>
      <content type="text"><![CDATA[#YII框架邮件发送 这两天在研究yii框架，话不多说，直接干！ 1.修改配置文件 这里基础版的配置文件为config/web.php &apos;mailer&apos; =&gt; [ &apos;class&apos; =&gt; &apos;yii\swiftmailer\Mailer&apos;, &apos;useFileTransport&apos; =&gt;false,//这句一定有，false发送邮件，true只是生成邮件在runtime文件夹下，不发邮件 &apos;transport&apos; =&gt; [ &apos;class&apos; =&gt; &apos;Swift_SmtpTransport&apos;, &apos;host&apos; =&gt; &apos;smtp.sina.cn&apos;, //每种邮箱的host配置不一样 &apos;username&apos; =&gt; &apos;qingchengsnow@sina.cn&apos;, &apos;password&apos; =&gt; &apos;gaobieme96&apos;, &apos;port&apos; =&gt; &apos;25&apos;, &apos;encryption&apos; =&gt; &apos;tls&apos;, ], &apos;messageConfig&apos;=&gt;[ &apos;charset&apos;=&gt;&apos;UTF-8&apos;, &apos;from&apos;=&gt;[&apos;qingchengsnow@sina.cn&apos;=&gt;&apos;admin&apos;] ], ], 2.直接在controller中使用 $mail= Yii::$app-&gt;mailer-&gt;compose(); $mail-&gt;setTo(&apos;***@qq.com&apos;); //要发送给那个人的邮箱 $mail-&gt;setSubject(&quot;邮件主题&quot;); //邮件主题 $mail-&gt;setTextBody(&apos;测试text&apos;); //发布纯文字文本 $mail-&gt;setHtmlBody(&quot;测试html text&quot;); //发送的消息内容 var_dump($mail-&gt;send()); 3.定义邮件模版，这样我们就可以更方便的构建我们的邮件模板了 在步骤2中我们定义了viewPath指向common\mail。因此我们可以在该目录下创建新的模版文件seekpass.php,内容自己随便定义就好。 $res = Yii::$app-&gt;mailer-&gt;compose(&apos;test&apos;) -&gt;setTo(&apos;*******@qq.com&apos;) -&gt;setSubject(&apos;Message subject&apos;) -&gt;send(); var_dump($res); //true 4.我们只需要在compose的第一个参数上填写该模版的文件名即可。 实际上比如找回密码等内容时，内容基本上都是动态不定的，也就是说我们怎么实现传参呢？这个也是很简单，只需要指定compose的第二个参数即可 $mail=Yii::$app-&gt;mailer-&gt;compose(&apos;seekpass&apos;, [&apos;adminuser&apos; =&gt; $data[&apos;Admin&apos;][&apos;adminuser&apos;], &apos;time&apos; =&gt; $time, &apos;token&apos; =&gt; $token]); $mail-&gt;setFrom(&apos;qingchengsnow@sina.cn&apos;); $mail-&gt;setTo($this-&gt;adminemail); $mail-&gt;setSubject(&quot;网易严选找回密码&quot;); 贴上模板内容 注意yii框架生成url的方式 Yii::$app-&gt;urlManager组件提供以下两种创建 URL 的方法： createUrl($params) createAbsoluteUrl($params, $schema = null) &lt;p&gt;尊敬的&lt;?php echo $adminuser; ?&gt;，您好：&lt;/p&gt; &lt;p&gt;您的找回密码链接如下：&lt;/p&gt; &lt;?php $url = Yii::$app-&gt;urlManager-&gt;createAbsoluteUrl([&apos;admin/manage/mailchangepass&apos;, &apos;timestamp&apos; =&gt; $time, &apos;adminuser&apos; =&gt; $adminuser, &apos;token&apos; =&gt; $token]); ?&gt; &lt;p&gt;&lt;a href=&quot;&lt;?php echo $url; ?&gt;&quot;&gt;&lt;?php echo $url; ?&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;该链接5分钟内有效，请勿传递给别人！&lt;/p&gt; &lt;p&gt;该邮件为系统自动发送，请勿回复！&lt;/p&gt; 此处输入代码 关于发送邮件报错：stream_socket_enable_crypto（）： 好吧，我们需要启用打开SSL模块。这里是怎么做的： 1.找到并打开php.ini文件 2.搜索行： ;extension=php_openssl.ddl 3.启用通过删除模块;字符 4.保存文件并重新启动Apache]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[简单ajax]]></title>
      <url>%2F2016%2F12%2F20%2F%E7%AE%80%E5%8D%95ajax%2F</url>
      <content type="text"><![CDATA[简单ajax 变身！卡布达 在移动后台无聊复制粘贴文档一天，下班急吼吼回宿舍 今天要学ajax！！！ 效果先贴上图片 因为需要2个文件 前台的HTML和js代码 后台的php代码 偷懒就没写数据库 只为了实现功能！！ 前台代码 &lt;body&gt; &lt;input type=&quot;text&quot; id=&quot;scr&quot;&gt;&lt;input id=&quot;cx&quot; type=&quot;submit&quot; value=&quot;点击查询&quot;&gt;&lt;br&gt; &lt;p id=&quot;c&quot;&gt;&lt;/p&gt; &lt;br /&gt; &lt;br /&gt; &lt;input type=&quot;text&quot; id=&quot;name&quot;&gt;&lt;br /&gt; &lt;input type=&quot;text&quot; id=&quot;sex&quot;&gt;&lt;br /&gt; &lt;input type=&quot;text&quot; id=&quot;id&quot;&gt;&lt;br /&gt; &lt;input id=&quot;save&quot; type=&quot;submit&quot; value=&quot;保存&quot;&gt;&lt;br&gt; &lt;p id=&quot;d&quot;&gt;&lt;/p&gt; &lt;script&gt; //点击查询时查询 document.getElementById(&quot;cx&quot;).onclick=function(){ //建立XHR对象 var request=new XMLHttpRequest(); //获取查询值 var d=document.getElementById(&apos;scr&apos;).value; //get方式调用http请求 request.open(&apos;GET&apos;,&apos;ajax.php?id=&apos;+d,true); //发送到服务器 request.send(); //获取redystate状态码 request.onreadystatechange=function(){ //等于4 请求已经成功 if(request.readyState===4){ //等于200响应成功 if(request.status===200){ //获取响应结果并且返回到html页面 //解析格式化json数据 var data=JSON.parse(request.responseText); //判断是否成功 if(data.success===&quot;true&quot;){ document.getElementById(&quot;c&quot;).innerHTML=data.msg; }else{ document.getElementById(&quot;c&quot;).innerHTML=&quot;出现错误:&quot;+data.msg; } }else{ //获取异常信息 alert(request.status); } } } } //ajax注册信息 //点击查询时查询 document.getElementById(&quot;save&quot;).onclick=function(){ //建立XHR对象 var request=new XMLHttpRequest(); //获取查询值 var data=&quot;name=&quot;+document.getElementById(&apos;name&apos;).value +&quot;&amp;sex=&quot;+document.getElementById(&apos;sex&apos;).value +&quot;&amp;id=&quot;+document.getElementById(&apos;id&apos;).value ; //POST方式调用http请求 request.open(&apos;POST&apos;,&apos;ajax.php&apos;,true); //注意POST方式必须声明 request.setRequestHeader(&quot;Content-type&quot;,&quot;application/x-www-form-urlencoded&quot;); //发送数据到服务器 request.send(data); //获取redystate状态码 request.onreadystatechange=function(){ //等于4 请求已经成功 if(request.readyState===4){ //等于200响应成功 if(request.status===200){ //获取响应结果并且返回到html页面 var data=JSON.parse(request.responseText); //判断是否成功 if(data.success===&quot;true&quot;){ document.getElementById(&quot;d&quot;).innerHTML=data.msg; }else{ document.getElementById(&quot;d&quot;).innerHTML=&quot;出现错误:&quot;+data.msg; } }else{ //获取异常信息 alert(request.status); } } } } &lt;/script&gt; 服务器端代码 &lt;?php //header(&quot;Content-Type:text/plain;charset=UTF-8&quot;); //json声明 header(&quot;Content-Type:application/json;charset-UTF-8&quot;); //生成数据库 偷懒啦~~~~不用mysql了 $data=array( array( &quot;id&quot;=&gt;2, &quot;name&quot;=&gt;&quot;cx&quot;, &quot;sex&quot;=&gt;&quot;女&quot;, ), array( &quot;id&quot;=&gt;1, &quot;name&quot;=&gt;&quot;jh&quot;, &quot;sex&quot;=&gt;&quot;男&quot;, ), ); //判断请求方式调用不同函数 if($_SERVER[&quot;REQUEST_METHOD&quot;]==&quot;GET&quot;){ search(); }elseif($_SERVER[&quot;REQUEST_METHOD&quot;]==&quot;POST&quot;){ create(); } //查询 function search(){ if(!isset($_GET[&apos;id&apos;])){ echo &apos;{&quot;success&quot;:&quot;false&quot;,&quot;msg&quot;:&quot;参数错误!&quot;}&apos;; return; } $results=&apos;{&quot;success&quot;:&quot;false&quot;,&quot;msg&quot;:&quot;没有找到员工!&quot;}&apos;; global $data; foreach ($data as $value) { if(($_GET[&apos;id&apos;])==$value[&apos;id&apos;]){ $results=&apos;{&quot;success&quot;:&quot;true&quot;,&quot;msg&quot;:&quot;找到员工 姓名为&apos;.$value[&quot;name&quot;].&apos;&quot;}&apos;; break; } } echo $results; } //添加 function create(){ if(!$_POST[&quot;id&quot;]||!$_POST[&quot;name&quot;]||!$_POST[&quot;sex&quot;]){ echo &apos;{&quot;success&quot;:&quot;false&quot;,&quot;msg&quot;:&quot;参数不完整!&quot;}&apos;; return; } //偷懒 不add什么的 巴拉巴拉 echo &apos;{&quot;success&quot;:&quot;true&quot;,&quot;msg&quot;:&quot;员工&apos;.$_POST[&quot;name&quot;].&apos;保存成功!&quot;}&apos;; } ?&gt; 晚上12点咯，今天到此为止明天还要上班！嚯嚯嚯 我还没学到json呢]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[选项卡]]></title>
      <url>%2F2016%2F12%2F19%2F%E9%80%89%E9%A1%B9%E5%8D%A1%2F</url>
      <content type="text"><![CDATA[js 选项卡 啦啦啦啦啦能量变身 记得以前做课程设计的时候因为选项卡不会 然后就没用这个功能，今天花了点时间做了下。 效果先贴上图片 贴上自己写的简单的选项卡 css .active{ background-color:#F93; } .none{ display:none; width:300px; height:150px; border:1px solid #F33; } html &lt;div id=&quot;c&quot;&gt; &lt;input type=&quot;button&quot; class=&quot;active&quot; value=&quot;文章&quot;&gt; &lt;input type=&quot;button&quot; value=&quot;php&quot;&gt; &lt;input type=&quot;button&quot; value=&quot;js&quot;&gt; &lt;div class=&quot;none&quot; style=&quot;display:block&quot;&gt;111&lt;/div&gt; &lt;div class=&quot;none&quot;&gt;2222&lt;/div&gt; &lt;div class=&quot;none&quot;&gt;3333&lt;/div&gt; &lt;/div&gt; js &lt;script&gt; window.onload=function(){ var father=document.getElementById(&apos;c&apos;);//获取div var btn=father.getElementsByTagName(&apos;input&apos;);//获取div下的inpu var div1=father.getElementsByTagName(&apos;div&apos;);//获取div下的div for(var i=0;i&lt;btn.length;i++){//循环每个按钮 btn[i].index=i;//btn[i]是指定button的第i个按钮;为该按钮添加一个index属性，并将index的值设置为 btn[i].onclick=function(){ for(var n=0;n&lt;btn.length;n++){//循环去掉button的样式，把div隐藏 btn[n].className=&apos;&apos;;//清空按钮的样式 div1[n].style.display=&apos;none&apos;;//隐藏div } this.className=&apos;active&apos;;//自身添加active div1[this.index].style.display=&apos;block&apos;; //this.index是当前div = btn[i].index=i } } } &lt;/script&gt;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[php分页]]></title>
      <url>%2F2016%2F12%2F14%2Fphp%E5%88%86%E9%A1%B5%2F</url>
      <content type="text"><![CDATA[#php原生验证码生成 看山是山，看水是水，看山不是山，看水不是水，看山还是山，看水还是水 在用惯了TP框架后分页功能也是直接拿来用，这几天复习php原生，今天花了点时间自己写了下分页功能，记录一下吧，并不完善。 效果先贴上图片 贴上自己写的简单的分页 &lt;?php $host=&quot;127.0.0.1&quot;; $name=&quot;root&quot;; $pass=&quot;root&quot;; $con=mysql_connect($host,$name,$pass); mysql_select_db(&quot;blog&quot;); mysql_query(&apos;set names utf8&apos;); $sql=&quot;select name from bl_user&quot;; $results=mysql_query($sql); $sum=mysql_num_rows($results); //分页查询数据 $n=4;//每页显示4条数据 $total=ceil($sum/$n);//向上取整获取总页数 //获取page如果没有的话 默认为1 第一页 if(isset($_GET[&apos;page&apos;])){ $page=$_GET[&apos;page&apos;]; }elseif($_GET[&apos;page&apos;]&lt;1){ $page=1; }else{ $page=1; } $row=($page-1)*$n;//limit的位置 $sql=&quot;select name from bl_user limit $row,$n&quot;;//查询一页的数据 $results=mysql_query($sql); $data=array(); while($count=mysql_fetch_row($results)) { $data[]=$count; } ?&gt; &lt;div&gt; &lt;?php //循环输出内容 foreach ($data as $key =&gt; $value) { echo $value[&apos;0&apos;].&apos;&lt;br /&gt;&lt;br /&gt;&apos;; } //循环出页数 for($i=1;$i&lt;=$total;$i++){ echo &quot;&lt;a href=&apos;page.php?page=$i&apos;&gt;$i&lt;/a&gt;&amp;nbsp;&amp;nbsp&quot;; } //上一页 if($page&gt;1){ echo &quot;&lt;a href=&apos;page.php?page=&quot;.($page-1).&quot;&apos;&gt;上一页&lt;/a&gt;&quot;; } if($page&lt;$total){ echo &quot;&lt;a href=&apos;page.php?page=&quot;.($page+1).&quot;&apos;&gt;下一页&lt;/a&gt;&quot;; } ?&gt;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[code-验证码生成]]></title>
      <url>%2F2016%2F12%2F12%2Fcode-%E9%AA%8C%E8%AF%81%E7%A0%81%E7%94%9F%E6%88%90%2F</url>
      <content type="text"><![CDATA[#php原生验证码生成 不积跬步，无以至千里。不积小流，无以成江海 在用惯了TP框架后验证码功能都是直接拿来用，今天复习原生php发现生成验证码真的很简单，我以前还感觉很难，果然不动手永远不会啊。 效果先贴上图片 贴上自己写的简单的验证码 //声明 header(&apos;content-type:image/png&apos;); //生成画布 $img=imagecreatetruecolor(100,50); //生成画笔 $blank=imagecolorallocate($img,0x00,0x00,0x00); $green=imagecolorallocate($img,0x00,0xff,0x00); $white=imagecolorallocate($img,0xff,0xff,0xff); //填充画布背景 imagefill($img,0,0,$white); //生成验证码 $code=&apos;&apos;; for($i=0;$i&lt;4;$i++){ $code.=rand(0,9); } //生成字符函数 imagestring($img,5,15,10,$code,$blank); //生成噪点 for($i=0;$i&lt;100;$i++){ imagesetpixel($img,rand(0,100),rand(0,100),$blank);//生成函数 imagesetpixel($img,rand(0,100),rand(0,100),$green); } imagepng($img);//生成图片 imagedestroy($img);//释放与image 关联的内存]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[email 验证]]></title>
      <url>%2F2016%2F12%2F10%2Femail-%E6%B3%A8%E5%86%8C%E9%AA%8C%E8%AF%81%2F</url>
      <content type="text"><![CDATA[#php email邮箱验证功能的实现 第一次更新博客 有点紧张，O(∩_∩)O哈哈哈~。 我们要实现的功能是用户点击注册时发送验证链接到指定邮箱，用户点击链接激活邮箱！ ###准备工具 phpmailer 数据库结构 一、下载phpmailer 将其配置到你的项目中 二、我们需要在我们项目中将phpmailer的sendMail方法写入到我们的公共函数部分方便后面调用。 function sendMail($to, $title, $content){ require_once(&apos;./Plug/phpmailer/class.phpmailer.php&apos;); $mail = new PHPMailer(); // 设置为要发邮件 $mail-&gt;IsSMTP(); // 是否允许发送HTML代码做为邮件的内容 $mail-&gt;IsHTML(TRUE); $mail-&gt;CharSet=&apos;UTF-8&apos;; // 是否需要身份验证 $mail-&gt;SMTPAuth=TRUE; /* 邮件服务器上的账号是什么 -&gt; 到163注册一个账号即可 */ $mail-&gt;From=&quot;qingchengsnow@sina.cn&quot;; $mail-&gt;FromName=&quot;qingchengsnow&quot;; $mail-&gt;Host=&quot;smtp.sina.cn&quot;; //发送邮件的服务协议地址 $mail-&gt;Username=&quot;qingchengsnow&quot;; $mail-&gt;Password=&quot;gaobieme96&quot;; // 发邮件端口号默认25 $mail-&gt;Port = 25; // 收件人 $mail-&gt;AddAddress($to); // 邮件标题 $mail-&gt;Subject=$title; // 邮件内容 $mail-&gt;Body=$content; return($mail-&gt;Send()); } 以上内容我们只需要修改如下图所示内容 三、当用户点击注册时，我们的主要逻辑如下： &apos;code&apos;=&gt;md5(uniqid()),//获取随机数 $url=SITEURL.&apos;index.php/Home/Ajax/chekemail/id/&apos;.$id.&apos;/code/&apos;.$obj[&apos;userinfo&apos;][&apos;code&apos;]; //生成邮箱激活链接 sendMail(I(&apos;email&apos;),&apos;Tasays注册信息&apos;,&apos;亲爱的&apos;.$obj[&apos;username&apos;].&apos;欢迎注册赵军海的个人blog 点击链接激活email &apos;.$url); //调用phpmailer的sendMail 这样我们的验证接连就会发送到用户邮箱了.具体实现如下图 看看我们有没有收到邮箱验证信息呢？ 下面我们要开始实现点击验证咯 非常简单哦~~~ 我们只需要根据链接传递进来的ID和code查询该用户code是否存，存在的话清空验证码，修改ver状态为1（已验证）即可。贴上代码]]></content>
    </entry>

    
  
  
</search>
